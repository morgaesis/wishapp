name: Infrastructure CI/CD

on:
  push:
    branches: [ main ]
    paths: [ 'infra/**' ]
  pull_request:
    types: [opened, synchronize, reopened]
    paths: [ 'infra/**' ]
  pull_request_target:
    types: [closed]
    paths: [ 'infra/**' ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # Different AWS accounts for isolation
  PR_AWS_ACCOUNT_ID: ${{ secrets.PR_AWS_ACCOUNT_ID }}
  PROD_AWS_ACCOUNT_ID: ${{ secrets.PROD_AWS_ACCOUNT_ID }}
  # Shared role name across accounts
  DEPLOYMENT_ROLE_NAME: GitHubActionsDeployment

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: cd infra && npm install
      - run: cd infra && npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g aws-cdk
      - run: cd infra && npm install

      # PR Preview Environment
      - if: github.event_name == 'pull_request'
        name: Deploy Preview
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{
            env.PR_AWS_ACCOUNT_ID
          }}:role/${{
            env.DEPLOYMENT_ROLE_NAME
          }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-pr-${{ github.event.number }}
      - if: github.event_name == 'pull_request'
        run: |
          cd infra && npx cdk deploy \
            --require-approval never \
            -c stage=pr-${{ github.event.number }} \
            --outputs-file outputs.json

      # Production Deploy
      - if: github.ref == 'refs/heads/main'
        name: Configure Prod AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{
            env.PROD_AWS_ACCOUNT_ID
          }}:role/${{
            env.DEPLOYMENT_ROLE_NAME
          }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-prod-deploy
      - if: github.ref == 'refs/heads/main'
        run: cd infra && npx cdk deploy --require-approval never -c stage=prod

  cleanup:
    if: github.event.action == 'closed'
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g aws-cdk
      - run: cd infra && npm install
      - name: Destroy Preview
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{
            env.PR_AWS_ACCOUNT_ID
          }}:role/${{
            env.DEPLOYMENT_ROLE_NAME
          }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: github-cleanup-${{ github.event.pull_request.number }}
      - run: cd infra && npx cdk destroy -f -c stage=pr-${{ github.event.pull_request.number }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g aws-cdk
      - run: cd infra && npm install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - run: cd infra && npx cdk synth
      - if: github.ref == 'refs/heads/main'
        run: cd infra && npx cdk deploy --require-approval never

  cleanup:
    if: github.event.action == 'closed'
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install -g aws-cdk
      - run: cd infra && npm install
      - name: Destroy PR environment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.PR_AWS_ROLE_ARN || env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          cd infra && npx cdk destroy -f \
            -c prNumber=${{ github.event.pull_request.number }}