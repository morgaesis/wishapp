name: AWS CDK Deployment
on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  GITHUB_ORG: ${{ github.repository_owner }}
  GITHUB_REPO: ${{ github.event.repository.name }}
  IS_PR: ${{ github.event_name == 'pull_request' }}
  PR_NUMBER: ${{ github.event.pull_request.number || '' }}

defaults:
  run:
    working-directory: infra/

jobs:
  qa:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: infra/package.json
      - run: npm ci
      - run: npm test

  deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    needs: [qa]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: infra/package.json
      - run: npm ci
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubOIDCDeployRole
          aws-region: ${{ secrets.AWS_REGION }}
      - run: |
          if [ "$IS_PR" = "true" ]; then
            npx cdk deploy -c prNumber=$PR_NUMBER --require-approval never
          else
            npx cdk deploy --require-approval never
          fi
      - name: Update PR comment
        if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
        uses: actions/github-script@v7
        with:
          script: |
            const comment = {
              body: `[SUCCESS] CDK Deployment Complete for PR #${{ github.event.pull_request.number }}`,
              issue_number: context.issue.number
            };
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.issue.number
            });
            const prevComment = comments.find(c => 
              c.user.login === 'github-actions[bot]' &&
              c.body.includes('[SUCCESS] CDK Deployment Complete')
            );
            if (prevComment) {
              await github.rest.issues.updateComment({
                ...context.repo,
                comment_id: prevComment.id,
                body: comment.body
              });
            } else {
              await github.rest.issues.createComment({
                ...context.repo,
                ...comment
              });
            }

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: infra/package.json
      - run: npm ci
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubOIDCDeployRole
          aws-region: ${{ secrets.AWS_REGION }}
      - run: npx cdk destroy -c prNumber=${{ github.event.pull_request.number }} --force
      - name: Remove PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              ...context.repo,
              issue_number: context.issue.number
            });
            const deploymentComment = comments.find(c => 
              c.user.login === 'github-actions[bot]' &&
              c.body.includes('[SUCCESS] CDK Deployment Complete')
            );
            if (deploymentComment) {
              await github.rest.issues.deleteComment({
                ...context.repo,
                comment_id: deploymentComment.id
              });
            }